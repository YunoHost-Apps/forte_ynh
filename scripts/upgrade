#!/bin/bash

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# LOAD SETTINGS
#=================================================
ynh_script_progression "Loading settings..."

email=$(ynh_user_get_info --username=$admin --key=mail)

#=================================================
# ENSURE DOWNWARD COMPATIBILITY
#=================================================
ynh_script_progression "Ensuring downward compatibility..."

# If fpm_footprint doesn't exist, create it
#REMOVEME? Everything about fpm_footprint is removed in helpers2.1... | if [ -z "$fpm_footprint" ]; then
    fpm_footprint=low
#REMOVEME? Everything about fpm_footprint is removed in helpers2.1... |     ynh_app_setting_set --key=fpm_footprint --value=$fpm_footprint
fi

# If fpm_free_footprint doesn't exist, create it
#REMOVEME? Everything about fpm_free_footprint is removed in helpers2.1... | if [ -z "$fpm_free_footprint" ]; then
    fpm_free_footprint=0
#REMOVEME? Everything about fpm_free_footprint is removed in helpers2.1... |     ynh_app_setting_set --key=fpm_free_footprint --value=$fpm_free_footprint
fi

# If fpm_usage doesn't exist, create it
#REMOVEME? Everything about fpm_usage is removed in helpers2.1... | if [ -z "$fpm_usage" ]; then
    fpm_usage=low
#REMOVEME? Everything about fpm_usage is removed in helpers2.1... |     ynh_app_setting_set --key=fpm_usage --value=$fpm_usage
fi

# Make sure that git_branch_mode exists with relevant value
git_branch_mode_status="$(cd "$install_dir" && ynh_exec_as_app git branch --show-current)" 2> /dev/null
if echo $git_branch_mode_status | grep -q "release"
then
    git_branch_mode="0"
    ynh_app_setting_set --key=git_branch_mode --value="$git_branch_mode"
elif echo $git_branch_mode_status | grep -q "dev"
then
    git_branch_mode="1"
    ynh_app_setting_set --key=git_branch_mode --value="$git_branch_mode"
else
    ynh_print_warn "You need to use \"release\" or \"dev\" branch, please handle this in command line"
    exit 0
fi

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================

# FIXME: this is still supported but the recommendation is now to *always* re-setup the app sources wether or not the upstream sources changed
if ynh_app_upstream_version_changed
then
    	ynh_script_progression "Upgrading source files..."

    # First we save what we need to keep
    mv $install_dir/store $data_dir/
    mv $install_dir/cache $data_dir/
    mv $install_dir/php.log $data_dir/

    # Then we remove the previous install
    ynh_safe_rm $install_dir

    # We make the install cloning the repo
    mkdir -p "$install_dir"
    #REMOVEME? Assuming the install dir is setup using ynh_setup_source, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chown -R $app:www-data "$install_dir"
    ynh_exec_as_app git clone https://codeberg.org/streams/streams.git "$install_dir" --quiet
    git config --system --add safe.directory $install_dir

    ynh_app_setting_get --key=git_branch_mode
    if [[ -n $git_branch_mode ]] && [ "$git_branch_mode" -eq "1" ]
    then
        ynh_print_info "Switching to \"dev\" branch"
        (cd "$install_dir" && ynh_exec_as_app git checkout dev)
    fi

    # We restore what we previously saved
    mv $data_dir/store $install_dir/
    mv $data_dir/cache $install_dir/
    mv $data_dir/php.log $install_dir/

    #REMOVEME? Assuming the install dir is setup using ynh_setup_source, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chmod -R o-rwx "$install_dir"
    #REMOVEME? Assuming the install dir is setup using ynh_setup_source, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chown -R $app:www-data "$install_dir"
    chmod -R 775 $install_dir/store $install_dir/cache
fi

#=================================================
# PHP-FPM CONFIGURATION
#=================================================
ynh_script_progression "Upgrading PHP-FPM configuration..."

# Create a dedicated PHP-FPM config
ynh_config_add_phpfpm

# Create a dedicated NGINX config
ynh_config_add_nginx

#=================================================
# COMPOSER
#=================================================
ynh_script_progression "Pulling in external libraries with Composer..."

ynh_composer_install
ynh_composer_exec install --no-dev

#REMOVEME? Assuming the install dir is setup using ynh_setup_source, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chown -R $app:www-data "$install_dir"
#=================================================
# ADDONS
#=================================================
ynh_script_progression "Installing addons..."

pushd $install_dir
    ynh_exec_as_app git config pull.rebase false
    ynh_exec_as_app util/add_addon_repo https://codeberg.org/streams/streams-addons.git zaddons
    cd /var/www/$app/extend/addon/zaddons
    ynh_exec_as_app git config pull.rebase false
popd

#=================================================
# UPDATE A CONFIG FILE
#=================================================
ynh_script_progression "Updating configuration..."

timezone=$(</etc/timezone)
max_imported_follow=10

ynh_config_add --template="htconfig.sample.php" --destination="$install_dir/.htconfig.php"

#REMOVEME? Assuming the file is setup using ynh_config_add, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chmod 600 "$install_dir/.htconfig.php"
#REMOVEME? Assuming the file is setup using ynh_config_add, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chown $app:$app "$install_dir/.htconfig.php"

if [ ! -f $data_dir/extra_conf.php ]
then
    ynh_exec_as_app touch $data_dir/extra_conf.php
fi

#=================================================
# UPGRADE CRON JOB
#=================================================
ynh_script_progression "Setuping cron job..."

# Set up cron job
ynh_config_add --template="cronjobs" --destination="/etc/cron.d/$app"
#REMOVEME? Assuming the file is setup using ynh_config_add, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chown root: "/etc/cron.d/$app"
#REMOVEME? Assuming the file is setup using ynh_config_add, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chmod 644 "/etc/cron.d/$app"
# Add daily update script
ynh_config_add --template="daily-update.sh" --destination="/home/yunohost.app/$app/daily-update.sh"
chown root: "/home/yunohost.app/$app/daily-update.sh"

#=================================================
# SETUP LOGROTATE
#=================================================
ynh_script_progression "Upgrading logrotate configuration..."

# Use logrotate to manage app-specific logfile(s)
ynh_config_add_logrotate "$install_dir/php.log"

# Create a dedicated Fail2Ban config
ynh_config_add_fail2ban --logpath="$install_dir/php.log" --failregex="^.*auth\.php.*failed login attempt.*from IP <HOST>.*$"

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression "Upgrade of $app completed"
